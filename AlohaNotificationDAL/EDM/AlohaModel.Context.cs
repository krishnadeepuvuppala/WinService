//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AlohaNotificationDAL.EDM
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ALOHA_V1_DevEntities : DbContext
    {
        public ALOHA_V1_DevEntities()
            : base("name=ALOHA_V1_DevEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Definition> Definitions { get; set; }
        public virtual DbSet<Message> Messages { get; set; }
        public virtual DbSet<Parameter> Parameters { get; set; }
        public virtual DbSet<ParameterValue> ParameterValues { get; set; }
        public virtual DbSet<UserQueue> UserQueues { get; set; }
        public virtual DbSet<CustomListValue> CustomListValues { get; set; }
        public virtual DbSet<PayrollProcessBatch> PayrollProcessBatches { get; set; }
    
        public virtual int usp_InsertStaffBirthDayBySubscriptionID(Nullable<System.Guid> subscription_Id)
        {
            var subscription_IdParameter = subscription_Id.HasValue ?
                new ObjectParameter("Subscription_Id", subscription_Id) :
                new ObjectParameter("Subscription_Id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertStaffBirthDayBySubscriptionID", subscription_IdParameter);
        }
    
        public virtual int usp_InsertQualificationExpirationBySubscriptionID(Nullable<System.Guid> subscription_Id, Nullable<int> duration, string howOften)
        {
            var subscription_IdParameter = subscription_Id.HasValue ?
                new ObjectParameter("Subscription_Id", subscription_Id) :
                new ObjectParameter("Subscription_Id", typeof(System.Guid));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("Duration", duration) :
                new ObjectParameter("Duration", typeof(int));
    
            var howOftenParameter = howOften != null ?
                new ObjectParameter("howOften", howOften) :
                new ObjectParameter("howOften", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertQualificationExpirationBySubscriptionID", subscription_IdParameter, durationParameter, howOftenParameter);
        }
    
        public virtual int usp_InsertIncompleteAppointmentsBySubscriptionID(Nullable<System.Guid> subscription_Id, Nullable<int> settingDays, Nullable<long> sentdate)
        {
            var subscription_IdParameter = subscription_Id.HasValue ?
                new ObjectParameter("Subscription_Id", subscription_Id) :
                new ObjectParameter("Subscription_Id", typeof(System.Guid));
    
            var settingDaysParameter = settingDays.HasValue ?
                new ObjectParameter("SettingDays", settingDays) :
                new ObjectParameter("SettingDays", typeof(int));
    
            var sentdateParameter = sentdate.HasValue ?
                new ObjectParameter("sentdate", sentdate) :
                new ObjectParameter("sentdate", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertIncompleteAppointmentsBySubscriptionID", subscription_IdParameter, settingDaysParameter, sentdateParameter);
        }
    
        public virtual int usp_InsertSubmitTimesheetBySubscriptionID(Nullable<System.Guid> subscription_Id)
        {
            var subscription_IdParameter = subscription_Id.HasValue ?
                new ObjectParameter("Subscription_Id", subscription_Id) :
                new ObjectParameter("Subscription_Id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertSubmitTimesheetBySubscriptionID", subscription_IdParameter);
        }
    
        public virtual int usp_InsertClinicalTeamNotificationBySubscriptionID(Nullable<System.Guid> subscription_Id, Nullable<long> lastRan)
        {
            var subscription_IdParameter = subscription_Id.HasValue ?
                new ObjectParameter("Subscription_Id", subscription_Id) :
                new ObjectParameter("Subscription_Id", typeof(System.Guid));
    
            var lastRanParameter = lastRan.HasValue ?
                new ObjectParameter("lastRan", lastRan) :
                new ObjectParameter("lastRan", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertClinicalTeamNotificationBySubscriptionID", subscription_IdParameter, lastRanParameter);
        }
    
        public virtual int usp_InsertStaffAssignmentsNotificationBySubscriptionID(Nullable<System.Guid> subscription_Id, Nullable<long> lastRan)
        {
            var subscription_IdParameter = subscription_Id.HasValue ?
                new ObjectParameter("Subscription_Id", subscription_Id) :
                new ObjectParameter("Subscription_Id", typeof(System.Guid));
    
            var lastRanParameter = lastRan.HasValue ?
                new ObjectParameter("lastRan", lastRan) :
                new ObjectParameter("lastRan", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertStaffAssignmentsNotificationBySubscriptionID", subscription_IdParameter, lastRanParameter);
        }
    
        public virtual int usp_InsertTeamAssignmentsNotificationBySubscriptionID(Nullable<System.Guid> subscription_Id, Nullable<long> lastRan)
        {
            var subscription_IdParameter = subscription_Id.HasValue ?
                new ObjectParameter("Subscription_Id", subscription_Id) :
                new ObjectParameter("Subscription_Id", typeof(System.Guid));
    
            var lastRanParameter = lastRan.HasValue ?
                new ObjectParameter("lastRan", lastRan) :
                new ObjectParameter("lastRan", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertTeamAssignmentsNotificationBySubscriptionID", subscription_IdParameter, lastRanParameter);
        }
    
        public virtual int usp_InsertSupervisorNotificationBySubscriptionID(Nullable<System.Guid> subscription_Id, Nullable<long> lastRan)
        {
            var subscription_IdParameter = subscription_Id.HasValue ?
                new ObjectParameter("Subscription_Id", subscription_Id) :
                new ObjectParameter("Subscription_Id", typeof(System.Guid));
    
            var lastRanParameter = lastRan.HasValue ?
                new ObjectParameter("lastRan", lastRan) :
                new ObjectParameter("lastRan", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertSupervisorNotificationBySubscriptionID", subscription_IdParameter, lastRanParameter);
        }
    
        public virtual int usp_InsertSubordinateNotificationBySubscriptionID(Nullable<System.Guid> subscription_Id, Nullable<long> lastRan)
        {
            var subscription_IdParameter = subscription_Id.HasValue ?
                new ObjectParameter("Subscription_Id", subscription_Id) :
                new ObjectParameter("Subscription_Id", typeof(System.Guid));
    
            var lastRanParameter = lastRan.HasValue ?
                new ObjectParameter("lastRan", lastRan) :
                new ObjectParameter("lastRan", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertSubordinateNotificationBySubscriptionID", subscription_IdParameter, lastRanParameter);
        }
    }
}
